{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filterValue","handleOnChange","htmlFor","value","onChange","id","PersonForm","handleOnSubmit","nameValue","handleOnChangeName","numberValue","handleOnChangeNumber","onSubmit","type","Person","name","number","handleClick","onClick","Persons","persons","handleDeletePerson","personsToShow","filter","person","toLowerCase","includes","map","key","Notification","notification","notificationStyle","color","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setNotification","useEffect","personService","initialPersons","catch","error","showNotification","setTimeout","event","target","preventDefault","find","changedPerson","window","confirm","returnedPerson","p","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5582cda6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filterValue, handleOnChange}) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filter\">filter shown with</label>\r\n      <input\r\n        value={filterValue}\r\n        onChange={handleOnChange}\r\n        id=\"filter\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ handleOnSubmit, nameValue, handleOnChangeName, numberValue, handleOnChangeNumber }) => {\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <div>\r\n        name: <input\r\n          value={nameValue}\r\n          onChange={handleOnChangeName}\r\n        />\r\n      </div>\r\n      <div>\r\n        number: <input\r\n          value={numberValue}\r\n          onChange={handleOnChangeNumber}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ name, number, handleClick }) => {\r\n  return (\r\n    <li>\r\n      {name} {number}\r\n      <button onClick={handleClick}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, filterValue, handleDeletePerson }) => {\r\n  const personsToShow = !filterValue\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(filterValue.toLowerCase()))\r\n\r\n  return (\r\n    <ul>\r\n      {personsToShow.map(person =>\r\n          <Person\r\n            key={person.id}\r\n            name={person.name}\r\n            number={person.number}\r\n            handleClick={() => handleDeletePerson(person.id)}\r\n          />\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  const color = notification.style === 'success' ? 'green' : 'red'\r\n  const notificationStyle = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    fontSize: '20px',\r\n    borderStyle: 'solid',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n  }\r\n\r\n  if (notification.message) {\r\n    return (\r\n      <p style={notificationStyle}>{notification.message}</p>\r\n    )\r\n  }\r\n  return <></>\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteId = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deleteId, update }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const [notification, setNotification] = useState({\r\n    message: null,\r\n    style: null\r\n  })\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n      .catch(error => {\r\n        showNotification('Could not retrieve persons', 'error')\r\n      })\r\n  }, [])\r\n\r\n  const showNotification = (message, style) => {\r\n    setNotification({ message: message, style: style })\r\n    setTimeout(() => {\r\n      setNotification({ message: null, style: null })\r\n    }, 3000)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const person = persons.find(person => person.name === newName)\r\n    const changedPerson = { ...person, number: newNumber }\r\n    if (person) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)) {\r\n        personService\r\n          .update(person.id, changedPerson)\r\n          .then(returnedPerson => {\r\n            showNotification(`Changed number of ${returnedPerson.name} to ${returnedPerson.number}`, 'success')\r\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\r\n          })\r\n          .catch(error => {\r\n            showNotification(`Information of ${person.name} has already been removed from server`, 'error')\r\n            setPersons(persons.filter(p => p.id !== person.id))\r\n          })\r\n        setNewName('')\r\n        setNewNumber('')\r\n      }\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          showNotification(`Added ${returnedPerson.name}`, 'success')\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n          showNotification(`Person validation failed: ${error.response.data.error}`, 'error')\r\n        })\r\n    }\r\n  }\r\n\r\n  const deletePerson = id => {\r\n    const person = persons.find(person => person.id === id)\r\n    if (window.confirm(`Delete ${person.name}`)) {\r\n      personService\r\n        .deleteId(id)\r\n        .then(response => {\r\n          showNotification(`Deleted ${person.name}`, 'success')\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n        .catch(error => {\r\n          showNotification(`Information of ${person.name} has already been removed from server`, 'error')\r\n          setPersons(persons.filter(person => person.id !== id))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      <Filter filterValue={newFilter} handleOnChange={(event) => setNewFilter(event.target.value)} />\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        handleOnSubmit={addPerson}\r\n        nameValue={newName}\r\n        handleOnChangeName={(event) => setNewName(event.target.value)}\r\n        numberValue={newNumber}\r\n        handleOnChangeNumber={(event) => setNewNumber(event.target.value)}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} filterValue={newFilter} handleDeletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}